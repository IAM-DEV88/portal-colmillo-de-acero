---
import Layout from '../components/layout/Layout.astro';
import { getVoteStats } from '../lib/voting';
import rosterData from '../data/roster.json';

interface RosterCharacter {
  name: string;
  class: string;
  rank: string;
  publicNote: string;
  officerNote: string;
}

// Obtener parámetros de la URL
const searchParams = Astro.url.searchParams;
const success = searchParams.get('success') === 'true';
const error = searchParams.get('error');

// Obtener estadísticas de votos
interface VoteStat {
  character: string;
  count: number;
}

let voteStats: VoteStat[] = [];
let statsError: string | null = null;

// Solo ejecutar en el servidor
if (import.meta.env.SSR) {
  try {
    console.log('Obteniendo estadísticas de votación...');
    const stats = await getVoteStats();
    console.log('Resultado de getVoteStats:', stats);
    
    if (stats.success) {
      voteStats = stats.data || [];
    } else {
      statsError = stats.error || 'Error desconocido al cargar estadísticas';
      console.error('Error al cargar estadísticas:', statsError);
    }
  } catch (err) {
    statsError = err instanceof Error ? err.message : 'Error desconocido';
    console.error('Excepción al cargar estadísticas:', err);
  }
}
---

<Layout title="Votar">
  <main class="min-h-screen w-full px-4 sm:px-6 lg:px-8">
    <!-- Top Banner Ad -->
    <div
      class="max-w-4xl mx-auto mb-8 bg-gray-900/50 border border-amber-900/30 rounded-lg overflow-hidden"
    >
      <div
        class="w-full h-24 bg-gradient-to-r from-amber-900/20 to-amber-800/10 flex items-center justify-center"
      >
        <p class="text-amber-500/60 text-sm font-medium">APOYA A LA HERMANDAD</p>
      </div>
    </div>

    <div class="max-w-4xl mx-auto grid grid-cols-1 lg:grid-cols-6 gap-6">
      <!-- Left Sidebar Ad -->
      <div class="">
        <div class="sticky top-24">
          <div
            class="w-full h-[600px] bg-gray-900/50 border border-amber-900/30 rounded-lg overflow-hidden"
          >
            <div
              class="w-full h-full bg-gradient-to-b from-amber-900/10 to-transparent flex items-center justify-center"
            >
              <p class="text-amber-500/60 text-sm font-medium -rotate-90 whitespace-nowrap">
                APOYA A LA HERMANDAD
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <div class="lg:col-span-4">
        <div
          class="bg-gray-900/90 backdrop-blur-sm border border-amber-900/30 rounded-xl p-8 shadow-2xl shadow-amber-500/5"
        >
          <!-- Header -->
          <div class="text-center mb-8">
            <h1
              class="text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-amber-400 via-amber-300 to-amber-500 font-title tracking-wider mb-2"
            >
              APOYA A LA HERMANDAD
            </h1>
            <div
              class="w-24 h-0.5 bg-gradient-to-r from-amber-900/0 via-amber-500/80 to-amber-900/0 mx-auto my-4"
            >
            </div>
            <p class="text-gray-300 mt-4">
              Tu voto nos ayuda a crecer. ¡Puedes reclamar oro por cada voto!
            </p>
          </div>

          {
            error && (
              <div class="mb-6 p-4 rounded-lg bg-red-900/30 border border-red-800/50 text-red-100">
                <i class="fas fa-exclamation-circle text-2xl mb-2 text-red-400" />
                <p class="font-medium">Error</p>
                <p class="text-sm mt-1">{error}</p>
              </div>
            )
          }

          {
            success && (
              <div class="mb-6 p-4 rounded-lg bg-green-900/30 border border-green-800/50 text-green-100">
                <i class="fas fa-check-circle text-2xl mb-2 text-green-400" />
                <p class="font-medium">¡Voto registrado con éxito!</p>
                <p class="text-sm mt-1">Gracias por tu apoyo. ¡Sigue acumulando oro!</p>
              </div>
            )
          }

          <!-- Voting Form -->
          <form id="voteForm" class="space-y-6" onsubmit="return false;">
            <!-- Character Name Input -->
            <div>
              <label for="characterName" class="block text-sm font-medium text-amber-100 mb-2">
                Nombre del Personaje
              </label>
              <div class="relative">
                <input
                  type="text"
                  id="characterName"
                  name="characterName"
                  class="w-full px-4 py-2 bg-gray-800 border border-amber-600 rounded-md text-amber-100 focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                  placeholder="Escribe el nombre del personaje"
                  required
                  autocomplete="off"
                  autocorrect="off"
                  autocapitalize="off"
                  spellcheck="false"
                />
              </div>
              <p id="characterError" class="mt-1 text-sm text-red-400 hidden">
                Por favor ingresa un nombre de personaje válido
              </p>
            </div>

            <!-- Submit Button -->
            <div>
              <button
                type="submit"
                id="voteButton"
                class="w-full flex justify-center items-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-amber-900 bg-amber-500 hover:bg-amber-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled={false}
              >
                <span id="buttonText">Votar</span>
                <svg
                  id="loadingSpinner"
                  class="hidden animate-spin ml-2 h-4 w-4 text-amber-900"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <circle
                    class="opacity-25"
                    cx="12"
                    cy="12"
                    r="10"
                    stroke="currentColor"
                    stroke-width="4"></circle>
                  <path
                    class="opacity-75"
                    fill="currentColor"
                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                  ></path>
                </svg>
              </button>
            </div>
          </form>

          <!-- Vote Statistics -->
          <div class="mt-8">
            <h3 class="text-lg font-medium text-amber-100 mb-4">Ranking de votos</h3>
            {
              voteStats.length > 0 ? (
                <div class="bg-gray-900/50 border border-amber-900/30 rounded-lg overflow-hidden">
                  <table class="min-w-full divide-y divide-amber-900/30">
                    <thead class="bg-amber-900/20">
                      <tr>
                        <th
                          scope="col"
                          class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider"
                        >
                          Posición
                        </th>
                        <th
                          scope="col"
                          class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider"
                        >
                          Personaje
                        </th>
                        <th
                          scope="col"
                          class="px-6 py-3 text-right text-xs font-medium text-amber-400 uppercase tracking-wider"
                        >
                          Votos
                        </th>
                      </tr>
                    </thead>
                    <tbody class="bg-gray-900/30 divide-y divide-amber-900/20">
                      {voteStats.map((stat, index) => (
                        <tr class="hover:bg-amber-900/10 transition-colors">
                          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-amber-100">
                            {index + 1}
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm text-amber-200">
                            {stat.character}
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-right text-sm text-amber-300">
                            {stat.count}
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              ) : (
                <p class="text-amber-100/70 text-center py-4">
                  Aún no hay votos registrados. ¡Sé el primero en votar!
                </p>
              )
            }
          </div>

          <!-- Vote Info -->
          <div class="mt-8 pt-6 border-t border-gray-800">
            <h3 class="text-sm font-medium text-amber-100 mb-3">¿CÓMO FUNCIONA?</h3>
            <ul class="space-y-3">
              <li class="flex items-start">
                <div class="flex-shrink-0 h-5 w-5 text-amber-500 mr-2">
                  <i class="fas fa-check-circle"></i>
                </div>
                <span class="text-sm text-gray-300">Vota una vez cada 24 horas</span>
              </li>
              <li class="flex items-start">
                <div class="flex-shrink-0 h-5 w-5 text-amber-500 mr-2">
                  <i class="fas fa-check-circle"></i>
                </div>
                <span class="text-sm text-gray-300">Tu personaje debe ser rango Iniciado o superior</span>
              </li>
              <li class="flex items-start">
                <div class="flex-shrink-0 h-5 w-5 text-amber-500 mr-2">
                  <i class="fas fa-check-circle"></i>
                </div>
                <span class="text-sm text-gray-300">Cada voto es redimible por 50 unidades de oro</span>
              </li>
            </ul>
          </div>
        </div>
        <!-- Sección de Premios -->
        <div class="lg:col-span-4 mt-8">
          <div
            class="bg-gray-900/90 backdrop-blur-sm border border-amber-900/30 rounded-xl p-6 shadow-2xl shadow-amber-500/5"
          >
            <h2 class="text-2xl font-bold text-amber-100 mb-6 text-center">
              🏆 Premios del Mes 🏆
            </h2>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <!-- Premio 1 -->
              <div
                class="bg-gradient-to-br from-amber-900/30 to-amber-900/10 border border-amber-800/30 rounded-xl p-6 text-center transform transition-all hover:scale-105 hover:shadow-lg hover:shadow-amber-500/10"
              >
                <div
                  class="bg-amber-900/50 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4"
                >
                  <i class="fas fa-trophy text-3xl text-amber-400"></i>
                </div>
                <h3 class="text-xl font-bold text-amber-300 mb-2">1er Lugar</h3>
                <p class="text-amber-100 text-lg font-semibold mb-2">5,000 de Oro</p>
              </div>

              <!-- Premio 2 -->
              <div
                class="bg-gradient-to-br from-amber-900/30 to-amber-900/10 border border-amber-800/30 rounded-xl p-6 text-center transform transition-all hover:scale-105 hover:shadow-lg hover:shadow-amber-500/10"
              >
                <div
                  class="bg-amber-900/50 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4"
                >
                  <i class="fas fa-medal text-3xl text-amber-400"></i>
                </div>
                <h3 class="text-xl font-bold text-amber-300 mb-2">2do Lugar</h3>
                <p class="text-amber-100 text-lg font-semibold mb-2">3,000 de Oro</p>
              </div>

              <!-- Premio 3 -->
              <div
                class="bg-gradient-to-br from-amber-900/30 to-amber-900/10 border border-amber-800/30 rounded-xl p-6 text-center transform transition-all hover:scale-105 hover:shadow-lg hover:shadow-amber-500/10"
              >
                <div
                  class="bg-amber-900/50 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4"
                >
                  <i class="fas fa-award text-3xl text-amber-400"></i>
                </div>
                <h3 class="text-xl font-bold text-amber-300 mb-2">3er Lugar</h3>
                <p class="text-amber-100 text-lg font-semibold mb-2">1,500 de Oro</p>
              </div>
            </div>

            <div class="mt-6 text-center">
              <p class="text-amber-400 text-sm">
                * Los premios se entregan al final del mes al cierre de votaciones
              </p>
              <p class="text-amber-400 text-sm">
                * Solo puede haber un ganador por cada puesto
              </p>
              <p class="text-amber-400 text-sm">
                * En caso de empate se peleara a dados por cada puesto
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Sidebar Ad -->
      <div class="">
        <div class="sticky top-24">
          <div
            class="w-full h-[600px] bg-gray-900/50 border border-amber-900/30 rounded-lg overflow-hidden"
          >
            <div
              class="w-full h-full bg-gradient-to-b from-amber-900/10 to-transparent flex items-center justify-center"
            >
              <p class="text-amber-500/60 text-sm font-medium -rotate-90 whitespace-nowrap">
                APOYA A LA HERMANDAD
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Bottom Banner Ad -->
    <div
      class="max-w-4xl mx-auto mt-8 bg-gray-900/50 border border-amber-900/30 rounded-lg overflow-hidden"
    >
      <div
        class="w-full h-24 bg-gradient-to-r from-amber-900/20 to-amber-800/10 flex items-center justify-center"
      >
        <p class="text-amber-500/60 text-sm font-medium">APOYA A LA HERMANDAD</p>
      </div>
    </div>
  </main>

  <style is:global>
    /* Animation for vote button */
    @keyframes pulse {
      0%,
      100% {
        transform: scale(1);
        box-shadow: 0 0 0 0 rgba(245, 158, 11, 0.4);
      }
      50% {
        transform: scale(1.02);
        box-shadow: 0 0 0 8px rgba(245, 158, 11, 0);
      }
    }

    .animate-pulse-slow {
      animation: pulse 3s infinite;
    }
  </style>

  <script>
    // Esperar a que el DOM esté completamente cargado
    document.addEventListener('DOMContentLoaded', () => {
      // Elementos del DOM con tipos explícitos
      const form = document.getElementById('voteForm') as HTMLFormElement | null;
      const button = document.getElementById('voteButton') as HTMLButtonElement | null;
      const buttonText = document.getElementById('buttonText') as HTMLSpanElement | null;
      const loadingSpinner = document.getElementById('loadingSpinner') as HTMLElement | null;
      const characterInput = document.getElementById('characterName') as HTMLInputElement | null;
      const characterError = document.getElementById(
        'characterError'
      ) as HTMLParagraphElement | null;

      // Verificar que todos los elementos existan
      if (
        !form ||
        !button ||
        !characterInput ||
        !buttonText ||
        !loadingSpinner ||
        !characterError
      ) {
        console.error('No se encontraron todos los elementos necesarios');
        return;
      }

      // Validar el formulario
      function validateForm(): boolean {
        if (!characterInput) return false;

        const characterName = characterInput.value.trim();
        const isValid = characterName.length > 0;

        if (!characterError) return isValid;

        if (!isValid) {
          characterError.classList.remove('hidden');
          characterInput.classList.add('border-red-500');
          characterInput.classList.remove('border-amber-600');
        } else {
          characterError.classList.add('hidden');
          characterInput.classList.remove('border-red-500');
          characterInput.classList.add('border-amber-600');
        }

        return isValid;
      }

      // Manejador de envío del formulario
      async function handleSubmit(e: Event) {
        e.preventDefault();

        // Validar el formulario
        if (!validateForm() || !characterInput) {
          return;
        }

        const characterName = characterInput.value.trim();

        try {
          // Mostrar estado de carga
          if (!button) {
            console.error('No se encontró el botón de envío');
            return;
          }
          button.disabled = true;
          if (buttonText) buttonText.textContent = 'Procesando...';
          loadingSpinner?.classList.remove('hidden');

          console.log('Enviando voto para:', characterName);

          // Enviar el voto
          const response = await fetch('/api/vote', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ characterName }),
          });

          console.log('Respuesta recibida:', response.status, response.statusText);

          // Verificar si la respuesta es exitosa
          if (!response.ok) {
            const errorData = await response.json().catch(() => ({}));
            throw new Error(errorData.error || 'Error en la respuesta del servidor');
          }

          const result = await response.json();
          console.log('Resultado del voto:', result);

          if (result.success) {
            // Redirigir a la misma página con mensaje de éxito
            window.location.href = '/voto?success=true';
          } else {
            throw new Error(result.error || 'Error al registrar el voto');
          }
        } catch (error: unknown) {
          console.error('Error al procesar el voto:', error);

          // Mostrar mensaje de error
          const errorMessage = error instanceof Error ? error.message : 'Error al procesar el voto';
          window.location.href = `/voto?error=${encodeURIComponent(errorMessage)}`;
        } finally {
          // Restaurar el botón
          if (button) button.disabled = false;
          if (buttonText) buttonText.textContent = 'Votar';
          loadingSpinner?.classList.add('hidden');
        }
      }

      // Event listeners
      form.addEventListener('submit', handleSubmit);
      characterInput.addEventListener('input', validateForm);
    });
  </script>
</Layout>
